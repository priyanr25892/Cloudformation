

Resources:
 
 EC2RunInstanceFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: EC2ListFunction
      Handler: lambda_function.lambda_handler
      Role:
        Fn::GetAtt:
        - LambdaIAMRole
        - Arn
      Runtime: Python3.8
      
 LambdaIAMRole:
  Type: AWS::IAM::Role
  Properties:
    RoleName: LambdaIAMRole
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
      - Effect: Allow
        Principal:
          Service:
          - lambda.amazonaws.com
        Action:
        - sts:AssumeRole
    Path: "/"
    Policies:
    - PolicyName: AWSLambdaBasicExecutionRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - logs:CreateLogStream
          - logs:PutLogEvents
          Resource: "*"
        - Effect: Allow
          Action:
          - ec2:DescribeInstances
          Resource: "*"
        - Effect: Allow
          Action:
          - s3:PutObject
          - s3:GetObject
          - sns:Publish
          - logs:CreateLogGroup
          Resource: 
          - arn:aws:s3:::S3bucketec2llist/*
          - arn:aws:sns:*:56565645:sns-topic

  LambdaFunctionSchedule:
  Type: AWS::Events::Rule
  Properties:
    Name: LambdaFunctionSchedule
    Description: Triggers a function twice a day (12 hours once)
    ScheduleExpression: rate(12 hours)
    Targets:
    - Id: LambdaFunctionScheduleTarget
      Arn:
        Fn::GetAtt:
        - EC2RunInstanceFunction
        - Arn
    State: ENABLED
    
  InvokeLambdaPermission:
  Type: AWS::Lambda::Permission
  Properties:
    FunctionName:
      Fn::GetAtt:
      - EC2RunInstanceFunction
      - Arn
    Action: lambda:InvokeFunction
    Principal: events.amazonaws.com
    SourceArn:
      Fn::GetAtt:
      - LambdaFunctionSchedule
      - Arn
